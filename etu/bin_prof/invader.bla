ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 8x8
	 presence de 255 dans l'entete... PASS

ppm2blabla v3 (17/05/18)
[MCU #0] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #0] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #0] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #0] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #0] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #0] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #0] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 24, magnitude = 5, index = 24
		bitstream => writing 6 over 3 bits
		bitstream => writing 24 over 5 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
