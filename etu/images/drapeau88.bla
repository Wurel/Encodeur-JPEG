ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 8x8
	 presence de 255 dans l'entete... PASS

ppm2blabla v3 (17/05/18)
[MCU #0] Valeurs RGB initiales:
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    
0000ff 0000ff ffff00 ffff00 ffff00 ffff00 ff1b00 ff1b00    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 

[Cb]:
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 

[Cr]:
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 

[MCU #0] Downsampling:
[Y]:
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 
	1d 1d e2 e2 e2 e2 5c 5c 

[Cb]:
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 
	00 00 01 01 01 01 4c 4c 

[Cr]:
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 
	6b 6b 95 95 95 95 f4 f4 

[MCU #0] DCT:
[Y]:
	007a ff5e fd9c ffc7 0000 0025 00fd 0020 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	fc9c ff3d 0088 ffbb 0000 002d ffc7 0026 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	0112 fea0 0061 ff84 0000 0052 ffd7 0045 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #0] ZZ:
[Y]:
	007a ff5e 0000 0000 0000 fd9c ffc7 0000 
	0000 0000 0000 0000 0000 0000 0000 0025 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 00fd 0020 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	fc9c ff3d 0000 0000 0000 0088 ffbb 0000 
	0000 0000 0000 0000 0000 0000 0000 002d 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffc7 0026 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	0112 fea0 0000 0000 0000 0061 ff84 0000 
	0000 0000 0000 0000 0000 0000 0000 0052 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffd7 0045 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #0] Quantification:
[Y]:
	0018 ffca 0000 0000 0000 ffcd fffd 0000 
	0000 0000 0000 0000 0000 0000 0000 0002 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 001c 0002 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ff53 ffd9 0000 0000 0000 0004 fffe 0000 
	0000 0000 0000 0000 0000 0000 0000 0001 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffff 0001 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	0036 ffba 0000 0000 0000 0003 fffc 0000 
	0000 0000 0000 0000 0000 0000 0000 0002 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffff 0002 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #0] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 24, magnitude = 5, index = 24
		bitstream => writing 6 over 3 bits
		bitstream => writing 24 over 5 bits

AC:
	value = -54, magnitude = 6, index = 9
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 9 over 6 bits
	value = -51, magnitude = 6, index = 12
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 12 over 6 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 130, huffman path = 32704, nbits = 15
		bitstream => writing 32704 over 15 bits
		bitstream => writing 2 over 2 bits
	value = 28, magnitude = 5, index = 28
	RLE code = 181, huffman path = 65491, nbits = 16
		bitstream => writing 65491 over 16 bits
		bitstream => writing 28 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -173, magnitude = 8, index = 82
		bitstream => writing 254 over 8 bits
		bitstream => writing 82 over 8 bits

AC:
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 24 over 6 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 51, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 129, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 177, huffman path = 505, nbits = 9
		bitstream => writing 505 over 9 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = 54, magnitude = 6, index = 54
		bitstream => writing 62 over 6 bits
		bitstream => writing 54 over 6 bits

AC:
	value = -70, magnitude = 7, index = 57
	RLE code = 7, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 57 over 7 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 130, huffman path = 65463, nbits = 16
		bitstream => writing 65463 over 16 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 177, huffman path = 505, nbits = 9
		bitstream => writing 505 over 9 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
