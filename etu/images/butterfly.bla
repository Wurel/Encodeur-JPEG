ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 16x15
	 presence de 255 dans l'entete... PASS

ppm2blabla v4 (22/05/18)
[MCU #0] Valeurs RGB initiales:
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff 000000 ffffff ffffff    
ffffff e17d1c e17d1c e17d1c ffffff ffffff 000000 ffffff    
e17d1c ffffff 000000 87adc4 e17d1c ffffff 000000 ffffff    
e17d1c 87adc4 000000 ffffff 87adc4 e17d1c 000000 e1cdf0    
e17d1c 87adc4 ffffff 000000 87adc4 e17d1c e1cdf0 e1cdf0    
ffffff e17d1c 87adc4 000000 ffffff 87adc4 e17d1c e1cdf0    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff 00 ff ff 
	ff 90 90 90 ff ff 00 ff 
	90 ff 00 a4 90 ff 00 ff 
	90 a4 00 ff a4 90 00 d7 
	90 a4 ff 00 a4 90 d7 d7 
	ff 90 a4 00 ff a4 90 d7 

[Cb]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 3f 3f 3f 80 80 80 80 
	3f 80 80 92 3f 80 80 80 
	3f 92 80 80 92 3f 80 8e 
	3f 92 80 80 92 3f 8e 8e 
	80 3f 92 80 80 92 3f 8e 

[Cr]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 ba ba ba 80 80 80 80 
	ba 80 80 6b ba 80 80 80 
	ba 6b 80 80 6b ba 80 87 
	ba 6b 80 80 6b ba 87 87 
	80 ba 6b 80 80 6b ba 87 

[MCU #0] Downsampling:
[Y]:
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff 00 ff ff 
	ff 90 90 90 ff ff 00 ff 
	90 ff 00 a4 90 ff 00 ff 
	90 a4 00 ff a4 90 00 d7 
	90 a4 ff 00 a4 90 d7 d7 
	ff 90 a4 00 ff a4 90 d7 

[Cb]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 3f 3f 3f 80 80 80 80 
	3f 80 80 92 3f 80 80 80 
	3f 92 80 80 92 3f 80 8e 
	3f 92 80 80 92 3f 8e 8e 
	80 3f 92 80 80 92 3f 8e 

[Cr]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 ba ba ba 80 80 80 80 
	ba 80 80 6b ba 80 80 80 
	ba 6b 80 80 6b ba 80 87 
	ba 6b 80 80 6b ba 87 87 
	80 ba 6b 80 80 6b ba 87 

[MCU #0] DCT:
[Y]:
	01fc 0009 0057 0011 008e ff4f 002b fff9 
	0132 002a ffbf ffc2 0003 0064 ffc0 ffe2 
	0094 ffe7 0021 0002 ff73 005e fff6 00c8 
	ffbd ffd2 ffc9 000f fffb ffe4 fff9 ff28 
	ffeb fff3 0008 0081 0019 ff99 006c ffbf 
	ffff 0002 0007 ffd4 ffda 001d 002f 007c 
	ffe3 0033 ffec ffcf 0081 0027 ff98 ffef 
	000d 0000 0040 ffaf ffa6 000e ffa3 0034 

[Cb]:
	ffbd ffd6 fff4 ffd5 0009 ffef fff8 0008 
	001c 000d 001a 0037 fff2 0013 0001 fff5 
	0026 001e ffea fffa 0018 fff8 001f 000b 
	0003 0001 fff6 ffc0 ffe1 fff4 ffbb fffb 
	ffe1 ffef 0009 002b 0005 0018 0046 ffe5 
	fff3 ffed 0012 0016 000e fff0 ffd9 0028 
	000d 000f fff5 fffd 000c fff9 0010 0002 
	0016 000e fff2 ffd5 ffdb 000f fff5 ffdb 

[Cr]:
	0040 0016 0017 001e fffd 000e 0008 fff8 
	ffdf 0003 ffda ffd8 0005 ffee fffe 0009 
	ffe1 ffdf 0017 0000 ffee 0006 ffe1 fff5 
	fffd fffb 000a 0037 001a 000c 0040 0004 
	0016 0015 fff3 ffdc fffb ffe5 ffbf 0018 
	0010 000a fff1 ffeb ffef 0014 0020 ffdc 
	fff2 fff4 0009 ffff fffa 0001 fff5 fffa 
	ffec fff2 000b 0029 001b fff4 0006 0023 

[MCU #0] ZZ:
[Y]:
	01fc 0009 0132 0094 002a 0057 0011 ffbf 
	ffe7 ffbd ffeb ffd2 0021 ffc2 008e ff4f 
	0003 0002 ffc9 fff3 ffff ffe3 0002 0008 
	000f ff73 0064 002b fff9 ffc0 005e fffb 
	0081 0007 0033 000d 0000 ffec ffd4 0019 
	ffe4 fff6 ffe2 00c8 fff9 ff99 ffda ffcf 
	0040 ffaf 0081 001d 006c ff28 ffbf 002f 
	0027 ffa6 000e ff98 007c ffef ffa3 0034 

[Cb]:
	ffbd ffd6 001c 0026 000d fff4 ffd5 001a 
	001e 0003 ffe1 0001 ffea 0037 0009 ffef 
	fff2 fffa fff6 ffef fff3 000d ffed 0009 
	ffc0 0018 0013 fff8 0008 0001 fff8 ffe1 
	002b 0012 000f 0016 000e fff5 0016 0005 
	fff4 001f fff5 000b ffbb 0018 000e fffd 
	fff2 ffd5 000c fff0 0046 fffb ffe5 ffd9 
	fff9 ffdb 000f 0010 0028 0002 fff5 ffdb 

[Cr]:
	0040 0016 ffdf ffe1 0003 0017 001e ffda 
	ffdf fffd 0016 fffb 0017 ffd8 fffd 000e 
	0005 0000 000a 0015 0010 fff2 000a fff3 
	0037 ffee ffee 0008 fff8 fffe 0006 001a 
	ffdc fff1 fff4 ffec fff2 0009 ffeb fffb 
	000c ffe1 0009 fff5 0040 ffe5 ffef ffff 
	000b 0029 fffa 0014 ffbf 0004 0018 0020 
	0001 001b fff4 fff5 ffdc fffa 0006 0023 

[MCU #0] Quantification:
[Y]:
	0065 0003 0066 001d 0006 0007 0001 fffd 
	fffa fff0 fffb fff9 0004 fffd 0007 fff6 
	0000 0000 fff5 ffff 0000 ffff 0000 0000 
	0003 ffe4 000e 0004 0000 fffe 0003 0000 
	0019 0001 0004 0000 0000 0000 ffff 0001 
	fffc 0000 ffff 000a 0000 fffd ffff ffff 
	0004 fffc 0005 0001 0003 fffa ffff 0001 
	0001 fffd 0000 fffd 0003 0000 fffd 0001 

[Cb]:
	fff3 fff8 0004 0002 0000 0000 ffff 0000 
	0006 0000 fffd 0000 0000 0001 0000 0000 
	fffe 0000 0000 0000 0000 0000 0000 0000 
	fffc 0001 0000 0000 0000 0000 0000 ffff 
	0001 0000 0000 0000 0000 0000 0000 0000 
	0000 0001 0000 0000 fffe 0000 0000 0000 
	0000 ffff 0000 0000 0002 0000 0000 ffff 
	0000 ffff 0000 0000 0001 0000 0000 ffff 

[Cr]:
	000c 0004 fffc fffe 0000 0000 0001 ffff 
	fffa 0000 0002 0000 0000 ffff 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0003 0000 0000 0000 0000 0000 0000 0000 
	ffff 0000 0000 0000 0000 0000 0000 0000 
	0000 ffff 0000 0000 0002 0000 0000 0000 
	0000 0001 0000 0000 fffe 0000 0000 0001 
	0000 0000 0000 0000 ffff 0000 0000 0001 

[MCU #0] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 101, magnitude = 7, index = 101
		bitstream => writing 30 over 5 bits
		bitstream => writing 101 over 7 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 102, magnitude = 7, index = 102
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 102 over 7 bits
	value = 29, magnitude = 5, index = 29
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 29 over 5 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -28, magnitude = 5, index = 3
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 3 over 5 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 25 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = -13, magnitude = 4, index = 2
		bitstream => writing 14 over 4 bits
		bitstream => writing 2 over 4 bits

AC:
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 115, huffman path = 65455, nbits = 16
		bitstream => writing 65455 over 16 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 129, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 14 over 4 bits
		bitstream => writing 12 over 4 bits

AC:
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 162, huffman path = 65481, nbits = 16
		bitstream => writing 65481 over 16 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 113, huffman path = 122, nbits = 7
		bitstream => writing 122 over 7 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 129, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #1] Valeurs RGB initiales:
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff 000000 ffffff ffffff ffffff ffffff ffffff ffffff    
000000 ffffff ffffff e17d1c e17d1c e17d1c ffffff ffffff    
000000 ffffff e17d1c 87adc4 000000 ffffff e17d1c ffffff    
000000 e17d1c 87adc4 ffffff 000000 87adc4 e17d1c ffffff    
e1cdf0 e17d1c 87adc4 000000 ffffff 87adc4 e17d1c ffffff    
e17d1c 87adc4 ffffff 000000 87adc4 e17d1c ffffff ffffff    

[MCU #1] Conversion RGB -> YCbCr:
[Y]:
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff 00 ff ff ff ff ff ff 
	00 ff ff 90 90 90 ff ff 
	00 ff 90 a4 00 ff 90 ff 
	00 90 a4 ff 00 a4 90 ff 
	d7 90 a4 00 ff a4 90 ff 
	90 a4 ff 00 a4 90 ff ff 

[Cb]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 3f 3f 3f 80 80 
	80 80 3f 92 80 80 3f 80 
	80 3f 92 80 80 92 3f 80 
	8e 3f 92 80 80 92 3f 80 
	3f 92 80 80 92 3f 80 80 

[Cr]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 ba ba ba 80 80 
	80 80 ba 6b 80 80 ba 80 
	80 ba 6b 80 80 6b ba 80 
	87 ba 6b 80 80 6b ba 80 
	ba 6b 80 80 6b ba 80 80 

[MCU #1] Downsampling:
[Y]:
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff 00 ff ff ff ff ff ff 
	00 ff ff 90 90 90 ff ff 
	00 ff 90 a4 00 ff 90 ff 
	00 90 a4 ff 00 a4 90 ff 
	d7 90 a4 00 ff a4 90 ff 
	90 a4 ff 00 a4 90 ff ff 

[Cb]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 3f 3f 3f 80 80 
	80 80 3f 92 80 80 3f 80 
	80 3f 92 80 80 92 3f 80 
	8e 3f 92 80 80 92 3f 80 
	3f 92 80 80 92 3f 80 80 

[Cr]:
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 ba ba ba 80 80 
	80 80 ba 6b 80 80 ba 80 
	80 ba 6b 80 80 6b ba 80 
	87 ba 6b 80 80 6b ba 80 
	ba 6b 80 80 6b ba 80 80 

[MCU #1] DCT:
[Y]:
	020b ff49 0045 ff6e ffa3 ffd2 0043 0007 
	0121 0036 ff93 0033 0040 005f ffea ffd9 
	009a 0052 003a 008e 004d fff1 0014 00b1 
	ffbf 001e fff8 ffc4 ffe9 ffd8 ffdb ff2c 
	ffe6 fffa 002c ffb3 ff62 ffb4 ffb9 ffea 
	0000 fffe fffa 0025 003a ffde fffd 007e 
	ffe6 ffca ffc7 ffcb 0027 0090 0031 ffdd 
	000a fff9 000f 0081 0046 0005 005b 000b 

[Cb]:
	ffb8 0009 fffa ffea 0023 ffee 0021 ffff 
	0022 0001 0026 0013 ffdf 000f ffe4 fffb 
	0023 fff0 ffd9 ffec fff3 ffff ffeb 0018 
	0002 0002 ffe0 0026 0029 0001 0044 ffdf 
	ffe3 0004 0022 ffe6 fff1 ffec ffb2 fffe 
	fff2 0008 001e fffc fff0 0019 002d 001b 
	000c fff5 ffec fff4 fff8 fffd fff6 0009 
	0017 ffff ffe0 0020 0021 fff1 fffc ffd6 

[Cr]:
	003e fffa 000a 0016 ffe4 0012 ffe2 0001 
	ffe2 fffb ffd8 ffeb 0017 ffed 0018 0003 
	ffe0 000f 0023 0011 000d 0004 0014 ffe9 
	fffd ffff 001d ffdf ffdd fffc ffbf 001e 
	0017 fff7 ffdd 0014 0007 0010 0048 0001 
	000f fffd ffe8 0006 0013 ffeb ffd5 ffe7 
	fff1 0004 000d 0005 0004 0001 0007 fff6 
	ffec 0003 001f ffe5 ffe2 000c 0005 0027 

[MCU #1] ZZ:
[Y]:
	020b ff49 0121 009a 0036 0045 ff6e ff93 
	0052 ffbf ffe6 001e 003a 0033 ffa3 ffd2 
	0040 008e fff8 fffa 0000 ffe6 fffe 002c 
	ffc4 004d 005f 0043 0007 ffea fff1 ffe9 
	ffb3 fffa ffca 000a fff9 ffc7 0025 ff62 
	ffd8 0014 ffd9 00b1 ffdb ffb4 003a ffcb 
	000f 0081 0027 ffde ffb9 ff2c ffea fffd 
	0090 0046 0005 0031 007e ffdd 005b 000b 

[Cb]:
	ffb8 0009 0022 0023 0001 fffa ffea 0026 
	fff0 0002 ffe3 0002 ffd9 0013 0023 ffee 
	ffdf ffec ffe0 0004 fff2 000c 0008 0022 
	0026 fff3 000f 0021 ffff ffe4 ffff 0029 
	ffe6 001e fff5 0017 ffff ffec fffc fff1 
	0001 ffeb fffb 0018 0044 ffec fff0 fff4 
	ffe0 0020 fff8 0019 ffb2 ffdf fffe 002d 
	fffd 0021 fff1 fff6 001b 0009 fffc ffd6 

[Cr]:
	003e fffa ffe2 ffe0 fffb 000a 0016 ffd8 
	000f fffd 0017 ffff 0023 ffeb ffe4 0012 
	0017 0011 001d fff7 000f fff1 fffd ffdd 
	ffdf 000d ffed ffe2 0001 0018 0004 ffdd 
	0014 ffe8 0004 ffec 0003 000d 0006 0007 
	fffc 0014 0003 ffe9 ffbf 0010 0013 0005 
	001f ffe5 0004 ffeb 0048 001e 0001 ffd5 
	0001 ffe2 000c 0007 ffe7 fff6 0005 0027 

[MCU #1] Quantification:
[Y]:
	0068 ffc3 0060 001e 0007 0005 fff7 fffa 
	0014 fff0 fffa 0005 0007 0003 fffb fffe 
	0010 0023 ffff 0000 0000 ffff 0000 0002 
	fff1 000f 000d 0007 0000 0000 0000 ffff 
	fff1 0000 fffc 0000 0000 ffff 0001 fffa 
	fffb 0001 fffe 0009 ffff fffe 0001 ffff 
	0001 0006 0001 ffff fffe fffb 0000 0000 
	0006 0002 0000 0001 0003 ffff 0002 0000 

[Cb]:
	fff2 0001 0004 0002 0000 0000 0000 0001 
	fffd 0000 fffd 0000 ffff 0000 0001 0000 
	fffc fffe ffff 0000 0000 0000 0000 0001 
	0002 0000 0000 0001 0000 0000 0000 0001 
	0000 0001 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0002 0000 0000 0000 
	ffff 0001 0000 0000 fffe ffff 0000 0001 
	0000 0001 0000 0000 0000 0000 0000 ffff 

[Cr]:
	000c ffff fffc fffe 0000 0000 0000 ffff 
	0003 0000 0002 0000 0001 0000 0000 0000 
	0003 0002 0001 0000 0000 0000 0000 ffff 
	fffe 0000 0000 ffff 0000 0000 0000 ffff 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 fffe 0000 0000 0000 
	0001 0000 0000 0000 0002 0001 0000 ffff 
	0000 ffff 0000 0000 0000 0000 0000 0001 

[MCU #1] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 3, magnitude = 2, index = 3
		bitstream => writing 3 over 3 bits
		bitstream => writing 3 over 2 bits

AC:
	value = -61, magnitude = 6, index = 2
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 2 over 6 bits
	value = 96, magnitude = 7, index = 96
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 96 over 7 bits
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 30 over 5 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = 35, magnitude = 6, index = 35
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 35 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -1, magnitude = 1, index = 0
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits

AC:
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 162, huffman path = 65481, nbits = 16
		bitstream => writing 65481 over 16 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 194, huffman path = 65499, nbits = 16
		bitstream => writing 65499 over 16 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #2] Valeurs RGB initiales:
ffffff e17d1c 87adc4 ffffff 000000 87adc4 e17d1c e1cdf0    
ffffff ffffff e17d1c 87adc4 000000 ffffff e17d1c e1cdf0    
ffffff ffffff ffffff e17d1c ffffff 000000 e17d1c e1cdf0    
ffffff ffffff ffffff ffffff e17d1c e17d1c e17d1c e1cdf0    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff e1cdf0    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    

[MCU #2] Conversion RGB -> YCbCr:
[Y]:
	ff 90 a4 ff 00 a4 90 d7 
	ff ff 90 a4 00 ff 90 d7 
	ff ff ff 90 ff 00 90 d7 
	ff ff ff ff 90 90 90 d7 
	ff ff ff ff ff ff ff d7 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 

[Cb]:
	80 3f 92 80 80 92 3f 8e 
	80 80 3f 92 80 80 3f 8e 
	80 80 80 3f 80 80 3f 8e 
	80 80 80 80 3f 3f 3f 8e 
	80 80 80 80 80 80 80 8e 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[Cr]:
	80 ba 6b 80 80 6b ba 87 
	80 80 ba 6b 80 80 ba 87 
	80 80 80 ba 80 80 ba 87 
	80 80 80 80 ba ba ba 87 
	80 80 80 80 80 80 80 87 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[MCU #2] Downsampling:
[Y]:
	ff 90 a4 ff 00 a4 90 d7 
	ff ff 90 a4 00 ff 90 d7 
	ff ff ff 90 ff 00 90 d7 
	ff ff ff ff 90 90 90 d7 
	ff ff ff ff ff ff ff d7 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 

[Cb]:
	80 3f 92 80 80 92 3f 8e 
	80 80 3f 92 80 80 3f 8e 
	80 80 80 3f 80 80 3f 8e 
	80 80 80 80 3f 3f 3f 8e 
	80 80 80 80 80 80 80 8e 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[Cr]:
	80 ba 6b 80 80 6b ba 87 
	80 80 ba 6b 80 80 ba 87 
	80 80 80 ba 80 80 ba 87 
	80 80 80 80 ba ba ba 87 
	80 80 80 80 80 80 80 87 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[MCU #2] DCT:
[Y]:
	02e0 007b 006c ffbc 0017 0020 0019 ffc3 
	feef 0056 007d ffc9 0013 002d 0029 ffa6 
	ffcb ffcb 0033 0017 fff3 0039 002e ff9f 
	0028 ffb7 ffec 002e ffe5 004e 0027 ffa6 
	0001 fffe ffde fff0 000b 0044 0015 ffd1 
	ffe2 0024 ffef ffb9 003e 0014 fff7 0026 
	fffb 0012 ffe9 ffd2 0043 ffed ffd6 0073 
	0011 ffff ffe1 0001 0020 ffeb ffd5 0069 

[Cb]:
	ffc6 0011 000e ffed 002f ffda 0032 ffe7 
	ffd1 0007 fffc ffff 002e ffde 0034 ffe9 
	000f ffe9 ffdb 001e 000c 0006 0013 fffe 
	001e ffe7 ffe1 0008 0001 0020 0007 0005 
	fffb 0004 fffe ffde 0003 001e 0012 0005 
	ffe8 0012 0008 ffe0 fff8 000a 0020 0012 
	0003 fffc fffe 0007 ffe8 fff3 0021 0023 
	0017 ffea fff9 0019 ffea ffee 0014 001f 

[Cr]:
	003d ffdf 0004 0002 ffe2 0017 ffd8 0013 
	002f ffee 000f fff7 ffe0 0016 ffd3 0012 
	ffed 0018 001d ffe8 fff3 fffc ffea 0002 
	ffe2 0017 001a fff9 ffff ffe4 fff6 fffb 
	0005 fff8 0004 001a 0001 ffe3 ffee fff9 
	0014 fff0 fff6 001c 0007 fff8 ffe1 ffee 
	fffc 0005 fffe fffa 0014 000d ffe0 ffdf 
	ffec 0010 0007 ffe7 0015 000f ffed ffe2 

[MCU #2] ZZ:
[Y]:
	02e0 007b feef ffcb 0056 006c ffbc 007d 
	ffcb 0028 0001 ffb7 0033 ffc9 0017 0020 
	0013 0017 ffec fffe ffe2 fffb 0024 ffde 
	002e fff3 002d 0019 ffc3 0029 0039 ffe5 
	fff0 ffef 0012 0011 ffff ffe9 ffb9 000b 
	004e 002e ffa6 ff9f 0027 0044 003e ffd2 
	ffe1 0001 0043 0014 0015 ffa6 ffd1 fff7 
	ffed 0020 ffeb ffd6 0026 0073 ffd5 0069 

[Cb]:
	ffc6 0011 ffd1 000f 0007 000e ffed fffc 
	ffe9 001e fffb ffe7 ffdb ffff 002f ffda 
	002e 001e ffe1 0004 ffe8 0003 0012 fffe 
	0008 000c ffde 0032 ffe7 0034 0006 0001 
	ffde 0008 fffc 0017 ffea fffe ffe0 0003 
	0020 0013 ffe9 fffe 0007 001e fff8 0007 
	fff9 0019 ffe8 000a 0012 0005 0005 0020 
	fff3 ffea ffee 0021 0012 0023 0014 001f 

[Cr]:
	003d ffdf 002f ffed ffee 0004 0002 000f 
	0018 ffe2 0005 0017 001d fff7 ffe2 0017 
	ffe0 ffe8 001a fff8 0014 fffc fff0 0004 
	fff9 fff3 0016 ffd8 0013 ffd3 fffc ffff 
	001a fff6 0005 ffec 0010 fffe 001c 0001 
	ffe4 ffea 0012 0002 fff6 ffe3 0007 fffa 
	0007 ffe7 0014 fff8 ffee fffb fff9 ffe1 
	000d 0015 000f ffe0 ffee ffdf ffed ffe2 

[MCU #2] Quantification:
[Y]:
	0093 0029 ffa5 fff6 000c 0009 fffc 0006 
	fff3 000a 0000 fff4 0006 fffd 0001 0001 
	0004 0005 fffc 0000 fffe 0000 0001 fffe 
	000b fffe 0006 0002 fffc 0001 0002 ffff 
	fffd fffe 0001 0001 0000 0000 fffe 0000 
	000b 0004 fffb fffb 0001 0002 0001 ffff 
	fffe 0000 0002 0000 0000 fffe ffff 0000 
	0000 0001 0000 ffff 0001 0003 ffff 0003 

[Cb]:
	fff5 0003 fffa 0001 0000 0000 0000 0000 
	fffc 0005 0000 ffff ffff 0000 0001 ffff 
	0006 0003 ffff 0000 0000 0000 0000 0000 
	0000 0000 ffff 0001 0000 0001 0000 0000 
	ffff 0000 0000 0000 0000 0000 ffff 0000 
	0001 0000 0000 0000 0000 0001 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0001 
	0000 0000 0000 0001 0000 0001 0000 0001 

[Cr]:
	000c fffa 0006 ffff 0000 0000 0000 0000 
	0004 fffb 0000 0001 0000 0000 ffff 0000 
	fffc fffd 0001 0000 0000 0000 0000 0000 
	0000 0000 0000 ffff 0000 ffff 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 ffff 
	0000 0000 0000 ffff 0000 ffff 0000 ffff 

[MCU #2] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 43, magnitude = 6, index = 43
		bitstream => writing 14 over 4 bits
		bitstream => writing 43 over 6 bits

AC:
	value = 41, magnitude = 6, index = 41
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 41 over 6 bits
	value = -91, magnitude = 7, index = 36
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 36 over 7 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
[acdc] block 0
DC:
	value = 3, magnitude = 2, index = 3
		bitstream => writing 2 over 2 bits
		bitstream => writing 3 over 2 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 67, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 113, huffman path = 122, nbits = 7
		bitstream => writing 122 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 145, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 67, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 129, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = zrl, huffman_path = 1018, nbits = 10
		bitstream => writing 1018 over 10 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 145, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #3] Valeurs RGB initiales:
e17d1c 87adc4 000000 ffffff 87adc4 e17d1c ffffff ffffff    
e17d1c ffffff 000000 87adc4 e17d1c ffffff ffffff ffffff    
e17d1c 000000 ffffff e17d1c ffffff ffffff ffffff ffffff    
e17d1c e17d1c e17d1c ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    
ffffff ffffff ffffff ffffff ffffff ffffff ffffff ffffff    

[MCU #3] Conversion RGB -> YCbCr:
[Y]:
	90 a4 00 ff a4 90 ff ff 
	90 ff 00 a4 90 ff ff ff 
	90 00 ff 90 ff ff ff ff 
	90 90 90 ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 

[Cb]:
	3f 92 80 80 92 3f 80 80 
	3f 80 80 92 3f 80 80 80 
	3f 80 80 3f 80 80 80 80 
	3f 3f 3f 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[Cr]:
	ba 6b 80 80 6b ba 80 80 
	ba 80 80 6b ba 80 80 80 
	ba 80 80 ba 80 80 80 80 
	ba ba ba 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[MCU #3] Downsampling:
[Y]:
	90 a4 00 ff a4 90 ff ff 
	90 ff 00 a4 90 ff ff ff 
	90 00 ff 90 ff ff ff ff 
	90 90 90 ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 
	ff ff ff ff ff ff ff ff 

[Cb]:
	3f 92 80 80 92 3f 80 80 
	3f 80 80 92 3f 80 80 80 
	3f 80 80 3f 80 80 80 80 
	3f 3f 3f 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[Cr]:
	ba 6b 80 80 6b ba 80 80 
	ba 80 80 6b ba 80 80 80 
	ba 80 80 ba 80 80 80 80 
	ba ba ba 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 
	80 80 80 80 80 80 80 80 

[MCU #3] DCT:
[Y]:
	02f9 ff3d 000c 0026 002a 0012 ffd0 ffd2 
	feff ff53 0028 0027 002a 000d ffb4 ffbc 
	ffc4 000c 0046 0007 0011 fff9 ffa3 ffb4 
	0026 0051 002f fff2 0016 fff9 ff9f ffb6 
	0006 000e ffee ffec 0030 0011 ffc4 ffdb 
	ffe0 ffd2 ffc5 ffe7 0034 002b 000f 0025 
	fff8 ffeb ffd1 ffe0 0018 0030 004f 0063 
	0014 000f ffef ffe7 0000 001e 004a 0056 

[Cb]:
	ffbd ffcc ffea ffdb ffe9 ffee ffe7 fffb 
	ffcb ffe0 ffee ffce ffe5 ffed ffe2 fffe 
	0011 0022 0001 ffd9 fff6 fffb ffec 0004 
	001f 0027 ffff ffef 0014 0006 ffed 0006 
	fffa fff7 fff0 0005 0026 0002 ffe9 000a 
	ffe9 ffe5 fff1 000c 0018 ffee ffed 001a 
	0003 0006 0005 0006 fff8 ffdc fff9 0029 
	0016 001b 000e ffff ffec ffe2 0001 0021 

[Cr]:
	0039 002d 0014 0020 0013 0010 0017 0004 
	002c 001b 0011 002c 0017 0012 001c 0002 
	ffee ffe0 ffff 0022 0008 0005 0013 fffc 
	ffe2 ffdc 0000 000e ffee fffc 0012 fff9 
	0004 0006 000d fffa ffde ffff 0014 fff5 
	0014 0017 000c fff3 ffeb 0011 0011 ffe7 
	fffc fffa fffa fff9 0007 0021 0005 ffda 
	ffec ffe7 fff2 0000 0011 001b fffe ffe1 

[MCU #3] ZZ:
[Y]:
	02f9 ff3d feff ffc4 ff53 000c 0026 0028 
	000c 0026 0006 0051 0046 0027 002a 0012 
	002a 0007 002f 000e ffe0 fff8 ffd2 ffee 
	fff2 0011 000d ffd0 ffd2 ffb4 fff9 0016 
	ffec ffc5 ffeb 0014 000f ffd1 ffe7 0030 
	fff9 ffa3 ffbc ffb4 ff9f 0011 0034 ffe0 
	ffef ffe7 0018 002b ffc4 ffb6 ffdb 000f 
	0030 0000 001e 004f 0025 0063 004a 0056 

[Cb]:
	ffbd ffcc ffcb 0011 ffe0 ffea ffdb ffee 
	0022 001f fffa 0027 0001 ffce ffe9 ffee 
	ffe5 ffd9 ffff fff7 ffe9 0003 ffe5 fff0 
	ffef fff6 ffed ffe7 fffb ffe2 fffb 0014 
	0005 fff1 0006 0016 001b 0005 000c 0026 
	0006 ffec fffe 0004 ffed 0002 0018 0006 
	000e ffff fff8 ffee ffe9 0006 000a ffed 
	ffdc ffec ffe2 fff9 001a 0029 0001 0021 

[Cr]:
	0039 002d 002c ffee 001b 0014 0020 0011 
	ffe0 ffe2 0004 ffdc ffff 002c 0013 0010 
	0017 0022 0000 0006 0014 fffc 0017 000d 
	000e 0008 0012 0017 0004 001c 0005 ffee 
	fffa 000c fffa ffec ffe7 fffa fff3 ffde 
	fffc 0013 0002 fffc 0012 ffff ffeb fff9 
	fff2 0000 0007 0011 0014 fff9 fff5 0011 
	0021 0011 001b 0005 ffe7 ffda fffe ffe1 

[MCU #3] Quantification:
[Y]:
	0098 ffbf ffab fff4 ffe8 0001 0002 0002 
	0003 0009 0001 000d 0008 0002 0002 0001 
	000a 0001 0009 0002 fffe 0000 fffe ffff 
	fffd 0003 0001 fffb fffd fffe 0000 0001 
	fffc fff8 ffff 0001 0000 ffff 0000 0002 
	ffff fff8 fffc fffc fffc 0000 0001 ffff 
	ffff ffff 0001 0001 ffff fffe ffff 0000 
	0002 0000 0001 0002 0001 0003 0002 0002 

[Cb]:
	fff3 fff6 fff9 0001 ffff 0000 ffff 0000 
	0006 0005 0000 0001 0000 ffff 0000 0000 
	fffd fffc 0000 0000 0000 0000 0000 0000 
	ffff 0000 0000 0000 0000 ffff 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0001 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	ffff 0000 ffff 0000 0000 0001 0000 0001 

[Cr]:
	000b 0009 0006 ffff 0000 0000 0001 0000 
	fffa fffb 0000 ffff 0000 0001 0000 0000 
	0003 0004 0000 0000 0000 0000 0000 0000 
	0001 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 ffff 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0001 0000 0000 0000 0000 ffff 0000 ffff 

[MCU #3] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 5, magnitude = 3, index = 5
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits

AC:
	value = -65, magnitude = 7, index = 62
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 62 over 7 bits
	value = -85, magnitude = 7, index = 42
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 42 over 7 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
[acdc] block 0
DC:
	value = -2, magnitude = 2, index = 1
		bitstream => writing 2 over 2 bits
		bitstream => writing 1 over 2 bits

AC:
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 5 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 6 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 145, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 1 bits
	value = zrl, huffman_path = 1018, nbits = 10
		bitstream => writing 1018 over 10 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = -1, magnitude = 1, index = 0
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits

AC:
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 1 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 97, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 225, huffman path = 16352, nbits = 14
		bitstream => writing 16352 over 14 bits
		bitstream => writing 0 over 1 bits
	value = zrl, huffman_path = 1018, nbits = 10
		bitstream => writing 1018 over 10 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
