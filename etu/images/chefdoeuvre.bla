ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 15x15
	 presence de 255 dans l'entete... PASS

ppm2blabla v4 (22/05/18)
[MCU #0] Valeurs RGB initiales:
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb e11f1f e11f1f 00a1cb    
00a1cb 00a1cb 00a1cb 00a1cb e11f1f e11f1f e11f1f e11f1f    
00a1cb 00a1cb 00a1cb 00a1cb 000000 000000 000000 000000    
00a1cb 00a1cb 00a1cb 00a1cb 000000 ffffff ffffff 000000    
00a1cb 00a1cb 00a1cb 00a1cb 000000 ffffff ffffff 000000    
00a1cb 00a1cb 00a1cb 00a1cb 000000 000000 000000 000000    
00a1cb 00a1cb 000000 00a1cb 00a1cb 000000 000000 00a1cb    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	76 76 76 76 76 76 76 76 
	76 76 76 76 76 59 59 76 
	76 76 76 76 59 59 59 59 
	76 76 76 76 00 00 00 00 
	76 76 76 76 00 ff ff 00 
	76 76 76 76 00 ff ff 00 
	76 76 76 76 00 00 00 00 
	76 76 00 76 76 00 00 76 

[Cb]:
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 5f 5f b0 
	b0 b0 b0 b0 5f 5f 5f 5f 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 80 b0 b0 80 80 b0 

[Cr]:
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 2c 2c e1 e1 2c 
	2c 2c 2c 2c e1 e1 e1 e1 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 80 2c 2c 80 80 2c 

[MCU #0] Downsampling:
[Y]:
	76 76 76 76 76 76 76 76 
	76 76 76 76 76 59 59 76 
	76 76 76 76 59 59 59 59 
	76 76 76 76 00 00 00 00 
	76 76 76 76 00 ff ff 00 
	76 76 76 76 00 ff ff 00 
	76 76 76 76 00 00 00 00 
	76 76 00 76 76 00 00 76 

[Cb]:
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 5f 5f b0 
	b0 b0 b0 b0 5f 5f 5f 5f 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 b0 b0 80 80 80 80 
	b0 b0 80 b0 b0 80 80 b0 

[Cr]:
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 2c 2c e1 e1 2c 
	2c 2c 2c 2c e1 e1 e1 e1 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 2c 2c 80 80 80 80 
	2c 2c 80 2c 2c 80 80 2c 

[MCU #0] DCT:
[Y]:
	ff01 007e 0008 0010 ffb4 0063 ffec ffaf 
	0059 ffd4 fff4 ffe7 000e ffdb 001a 0031 
	ffee fffb 000a ffc9 00b3 ff7f ffe6 0025 
	0072 ffa8 fff6 0060 ff3f 0076 0016 ffe4 
	ffe9 fffd 0008 0006 0025 ffec ffec fff5 
	ff8a 0082 fff9 ffa8 002f fff1 000f 000c 
	004f ffa7 0004 003c ffdd 000b fff5 fff6 
	0025 ffe3 fffd 0013 ffe0 000f 0005 0000 

[Cb]:
	00d1 0096 0003 ffc2 0026 0009 fff8 ffe6 
	0010 ffff fffb fff3 fffe fffb 000a 000d 
	0032 ffc7 0004 000f 0022 ffdd fff5 000b 
	002b ffe3 fffc 000b ffe5 0009 0009 0007 
	002a ffce 0003 001c fffd fffa fff8 fffe 
	0004 0001 fffd 000c ffd5 001e 0006 fff7 
	fff5 0002 0001 000c ffef 000f fffb fff3 
	ffee 0011 ffff 0001 ffeb 0013 0002 fff7 

[Cr]:
	feaf fedd fffa 007a ffb3 fff0 000d 002e 
	fffe ffe7 0007 0024 fff6 000b ffed ffe8 
	ffa2 0067 fff8 ffe5 ffbe 0042 0011 ffe9 
	ff96 004d 0006 ffe0 0031 fff3 ffef ffee 
	ff97 0072 fffa ffc0 000d 0008 000d 0000 
	fff0 0006 0004 ffe0 0057 ffc2 fff5 0012 
	001e fff1 fffc ffe7 002a ffd7 0007 001d 
	002d ffd4 0001 fffe 002c ffd5 fffc 0014 

[MCU #0] ZZ:
[Y]:
	ff01 007e 0059 ffee ffd4 0008 0010 fff4 
	fffb 0072 ffe9 ffa8 000a ffe7 ffb4 0063 
	000e ffc9 fff6 fffd ff8a 004f 0082 0008 
	0060 00b3 ffdb ffec ffaf 001a ff7f ff3f 
	0006 fff9 ffa7 0025 ffe3 0004 ffa8 0025 
	0076 ffe6 0031 0025 0016 ffec 002f 003c 
	fffd 0013 ffdd fff1 ffec ffe4 fff5 000f 
	000b ffe0 000f fff5 000c fff6 0005 0000 

[Cb]:
	00d1 0096 0010 0032 ffff 0003 ffc2 fffb 
	ffc7 002b 002a ffe3 0004 fff3 0026 0009 
	fffe 000f fffc ffce 0004 fff5 0001 0003 
	000b 0022 fffb fff8 ffe6 000a ffdd ffe5 
	001c fffd 0002 ffee 0011 0001 000c fffd 
	0009 fff5 000d 000b 0009 fffa ffd5 000c 
	ffff 0001 ffef 001e fff8 0007 fffe 0006 
	000f ffeb 0013 fffb fff7 fff3 0002 fff7 

[Cr]:
	feaf fedd fffe ffa2 ffe7 fffa 007a 0007 
	0067 ff96 ff97 004d fff8 0024 ffb3 fff0 
	fff6 ffe5 0006 0072 fff0 001e 0006 fffa 
	ffe0 ffbe 000b 000d 002e ffed 0042 0031 
	ffc0 0004 fff1 002d ffd4 fffc ffe0 000d 
	fff3 0011 ffe8 ffe9 ffef 0008 0057 ffe7 
	0001 fffe 002a ffc2 000d ffee 0000 fff5 
	ffd7 002c ffd5 0007 0012 001d fffc 0014 

[MCU #0] Quantification:
[Y]:
	ffcd 002a 001d fffd fffa 0000 0001 0000 
	ffff 001c fffb fff2 0001 ffff fffc 0005 
	0003 fff3 fffe 0000 fff7 0004 0006 0000 
	0018 0023 fffb fffe fffb 0001 fffb fff6 
	0001 ffff fff8 0002 ffff 0000 fffe 0001 
	0010 fffe 0002 0001 0000 0000 0001 0002 
	0000 0001 ffff 0000 0000 0000 0000 0000 
	0000 ffff 0000 0000 0000 0000 0000 0000 

[Cb]:
	0029 001e 0002 0003 0000 0000 fffe 0000 
	fff5 0007 0005 ffff 0000 0000 0001 0000 
	0000 0001 0000 ffff 0000 0000 0000 0000 
	0000 0001 0000 0000 0000 0000 ffff 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 ffff 0000 
	0000 0000 0000 0001 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	ffbd ffc6 0000 fffa 0000 0000 0004 0000 
	0014 ffef fff3 0003 0000 0001 fffe 0000 
	ffff fffd 0000 0003 0000 0001 0000 0000 
	fffe fffd 0000 0000 0001 0000 0002 0001 
	fffe 0000 0000 0001 ffff 0000 ffff 0000 
	0000 0000 0000 0000 0000 0000 0002 0000 
	0000 0000 0001 fffe 0000 0000 0000 0000 
	ffff 0001 ffff 0000 0000 0000 0000 0000 

[MCU #0] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = -51, magnitude = 6, index = 12
		bitstream => writing 14 over 4 bits
		bitstream => writing 12 over 6 bits

AC:
	value = 42, magnitude = 6, index = 42
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 42 over 6 bits
	value = 29, magnitude = 5, index = 29
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 29 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 28, magnitude = 5, index = 28
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 28 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 6 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 24, magnitude = 5, index = 24
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 24 over 5 bits
	value = 35, magnitude = 6, index = 35
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 35 over 6 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 123, nbits = 7
		bitstream => writing 123 over 7 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = 41, magnitude = 6, index = 41
		bitstream => writing 62 over 6 bits
		bitstream => writing 41 over 6 bits

AC:
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 30 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 501, nbits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 7 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 241, huffman path = 32707, nbits = 15
		bitstream => writing 32707 over 15 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -67, magnitude = 7, index = 60
		bitstream => writing 126 over 7 bits
		bitstream => writing 60 over 7 bits

AC:
	value = -58, magnitude = 6, index = 5
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 5 over 6 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 1 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 20 over 5 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 2 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 114, huffman path = 2040, nbits = 11
		bitstream => writing 2040 over 11 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #1] Valeurs RGB initiales:
00a1cb 00a1cb e1a11f ffbc00 e1a11f e1a11f e1a11f e1a11f    
00a1cb 00a1cb 00a1cb e1a11f ffbc00 e1a11f e1a11f e1a11f    
e11f1f e11f1f 00a1cb 00a1cb e1a11f ffbc00 e1a11f e1a11f    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb e1a11f ffbc00 ffbc00    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb e1a11f e1a11f    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb    
00a1cb 000000 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb    

[MCU #1] Conversion RGB -> YCbCr:
[Y]:
	76 76 a5 bb a5 a5 a5 a5 
	76 76 76 a5 bb a5 a5 a5 
	59 59 76 76 a5 bb a5 a5 
	76 76 76 76 76 a5 bb bb 
	76 76 76 76 76 76 a5 a5 
	76 76 76 76 76 76 76 76 
	76 76 76 76 76 76 76 76 
	76 00 76 76 76 76 76 76 

[Cb]:
	b0 b0 34 17 34 34 34 34 
	b0 b0 b0 34 17 34 34 34 
	5f 5f b0 b0 34 17 34 34 
	b0 b0 b0 b0 b0 34 17 17 
	b0 b0 b0 b0 b0 b0 34 34 
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 80 b0 b0 b0 b0 b0 b0 

[Cr]:
	2c 2c ab b1 ab ab ab ab 
	2c 2c 2c ab b1 ab ab ab 
	e1 e1 2c 2c ab b1 ab ab 
	2c 2c 2c 2c 2c ab b1 b1 
	2c 2c 2c 2c 2c 2c ab ab 
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 80 2c 2c 2c 2c 2c 2c 

[MCU #1] Downsampling:
[Y]:
	76 76 a5 bb a5 a5 a5 a5 
	76 76 76 a5 bb a5 a5 a5 
	59 59 76 76 a5 bb a5 a5 
	76 76 76 76 76 a5 bb bb 
	76 76 76 76 76 76 a5 a5 
	76 76 76 76 76 76 76 76 
	76 76 76 76 76 76 76 76 
	76 00 76 76 76 76 76 76 

[Cb]:
	b0 b0 34 17 34 34 34 34 
	b0 b0 b0 34 17 34 34 34 
	5f 5f b0 b0 34 17 34 34 
	b0 b0 b0 b0 b0 34 17 17 
	b0 b0 b0 b0 b0 b0 34 34 
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 b0 b0 b0 
	b0 80 b0 b0 b0 b0 b0 b0 

[Cr]:
	2c 2c ab b1 ab ab ab ab 
	2c 2c 2c ab b1 ab ab ab 
	e1 e1 2c 2c ab b1 ab ab 
	2c 2c 2c 2c 2c ab b1 b1 
	2c 2c 2c 2c 2c 2c ab ab 
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 2c 2c 2c 2c 2c 
	2c 80 2c 2c 2c 2c 2c 2c 

[MCU #1] DCT:
[Y]:
	001d ff81 ffed 0004 0011 001d 0014 000e 
	0081 ffcf ffe3 fffd fff5 ffe8 ffea ffef 
	fff7 0013 ffc2 0000 0024 001b 001b 000b 
	0011 003f 0005 ffe1 fff8 fff5 ffe1 fff1 
	0007 ffeb 0014 ffea 0005 0027 0011 0008 
	000f 0008 000a fff8 ffe3 fff6 0002 fff0 
	ffe8 fff5 ffeb 0004 fffd 0008 001c 0009 
	fffb fffa fffa fffa fffa fff9 ffff 0007 

[Cb]:
	001d 00da ffee ffef 0002 fffd 0011 0006 
	fed9 009d 0043 ffe9 ffe3 fff1 fff1 fffe 
	ffeb ffb0 0086 0018 ffe2 0003 fff9 0005 
	0034 ffe8 003a 0052 ffe8 ffc8 fff1 ffeb 
	ffeb 002e ffde 0048 0021 ffd6 fff6 fffe 
	fff6 fffd fff7 fffb 0026 fff7 ffd0 0005 
	fff0 ffc0 fff7 ffe6 0016 0021 fff1 fff7 
	ffe1 ffec ffe0 fffd fffb 000f 000e ffe1 

[Cr]:
	fed9 ff4e 002e 0018 fff6 fff4 ffe0 fff2 
	012f ff73 ffd3 001f 001e 0011 0011 0004 
	0011 003b ff7a ffe0 0011 fff7 0006 fffc 
	ffa8 ffdc ffa7 ffa5 0016 0045 0027 0024 
	fffd ffb9 0007 ffb5 ffd6 0022 0013 0007 
	0006 000f 0004 000f ffde 0001 0033 0003 
	0034 006a 0029 0025 ffec ffcc fff7 000b 
	0041 002f 0041 0009 000b ffe8 ffde 0023 

[MCU #1] ZZ:
[Y]:
	001d ff81 0081 fff7 ffcf ffed 0004 ffe3 
	0013 0011 0007 003f ffc2 fffd 0011 001d 
	fff5 0000 0005 ffeb 000f ffe8 0008 0014 
	ffe1 0024 ffe8 0014 000e ffea 001b fff8 
	ffea 000a fff5 fffb fffa ffeb fff8 0005 
	fff5 001b ffef 000b ffe1 0027 ffe3 0004 
	fffa fffa fffd fff6 0011 fff1 0008 0002 
	0008 fffa fff9 001c fff0 0009 ffff 0007 

[Cb]:
	001d 00da fed9 ffeb 009d ffee ffef 0043 
	ffb0 0034 ffeb ffe8 0086 ffe9 0002 fffd 
	ffe3 0018 003a 002e fff6 fff0 fffd ffde 
	0052 ffe2 fff1 0011 0006 fff1 0003 ffe8 
	0048 fff7 ffc0 ffe1 ffec fff7 fffb 0021 
	ffc8 fff9 fffe 0005 fff1 ffd6 0026 ffe6 
	ffe0 fffd 0016 fff7 fff6 ffeb fffe ffd0 
	0021 fffb 000f fff1 0005 fff7 000e ffe1 

[Cr]:
	fed9 ff4e 012f 0011 ff73 002e 0018 ffd3 
	003b ffa8 fffd ffdc ff7a 001f fff6 fff4 
	001e ffe0 ffa7 ffb9 0006 0034 000f 0007 
	ffa5 0011 0011 ffe0 fff2 0011 fff7 0016 
	ffb5 0004 006a 0041 002f 0029 000f ffd6 
	0045 0006 0004 fffc 0027 0022 ffde 0025 
	0041 0009 ffec 0001 0013 0024 0007 0033 
	ffcc 000b ffe8 fff7 0003 000b ffde 0023 

[MCU #1] Quantification:
[Y]:
	0005 ffd6 002b ffff fff9 ffff 0000 ffff 
	0004 0004 0001 000a fff9 0000 0000 0001 
	fffe 0000 0001 fffd 0001 ffff 0000 0001 
	fff9 0007 fffd 0002 0000 0000 0001 0000 
	fffc 0001 ffff 0000 0000 0000 0000 0000 
	ffff 0002 ffff 0000 ffff 0001 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	0005 002b ffd6 ffff 0005 0000 0000 0002 
	fff0 0008 fffe ffff 0004 0000 0000 0000 
	fffc 0003 0003 0001 0000 0000 0000 ffff 
	0005 ffff 0000 0000 0000 0000 0000 0000 
	0002 0000 fffe ffff 0000 0000 0000 0001 
	ffff 0000 0000 0000 0000 ffff 0001 0000 
	ffff 0000 0000 0000 0000 0000 0000 ffff 
	0001 0000 0000 0000 0000 0000 0000 ffff 

[Cr]:
	ffc5 ffdd 002b 0001 fffc 0001 0000 ffff 
	000b fff2 0000 ffff fffc 0001 0000 0000 
	0004 fffc fffb fffe 0000 0001 0000 0000 
	fffa 0000 0000 ffff 0000 0000 0000 0000 
	fffe 0000 0003 0002 0001 0001 0000 ffff 
	0002 0000 0000 0000 0001 0001 ffff 0001 
	0002 0000 0000 0000 0000 0001 0000 0001 
	ffff 0000 0000 0000 0000 0000 ffff 0001 

[MCU #1] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 56, magnitude = 6, index = 56
		bitstream => writing 14 over 4 bits
		bitstream => writing 56 over 6 bits

AC:
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = 43, magnitude = 6, index = 43
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 43 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 122, nbits = 7
		bitstream => writing 122 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -36, magnitude = 6, index = 27
		bitstream => writing 62 over 6 bits
		bitstream => writing 27 over 6 bits

AC:
	value = 43, magnitude = 6, index = 43
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 43 over 6 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 21 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 15 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 98, huffman path = 2039, nbits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 1 bits
[acdc] block 0
DC:
	value = 8, magnitude = 4, index = 8
		bitstream => writing 14 over 4 bits
		bitstream => writing 8 over 4 bits

AC:
	value = -35, magnitude = 6, index = 28
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 28 over 6 bits
	value = 43, magnitude = 6, index = 43
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 43 over 6 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 11 over 4 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 1 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 66, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #2] Valeurs RGB initiales:
00a1cb 00a1cb 00a1cb 000000 000000 000000 000000 000000    
00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 000000 000000 00a1cb    
00a1cb 00a1cb 00a1cb 00a1cb 12cb00 000000 000000 00a1cb    
12cb00 00a1cb 000000 000000 000000 00a1cb 000000 12cb00    
00a1cb 12cb00 00a1cb 12cb00 00a1cb 00a1cb 000000 12cb00    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 000000 12cb00    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00    

[MCU #2] Conversion RGB -> YCbCr:
[Y]:
	76 76 76 00 00 00 00 00 
	76 76 76 76 76 00 00 76 
	76 76 76 76 7d 00 00 76 
	7d 76 00 00 00 76 00 7d 
	76 7d 76 7d 76 76 00 7d 
	7d 7d 7d 7d 7d 7d 00 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 

[Cb]:
	b0 b0 b0 80 80 80 80 80 
	b0 b0 b0 b0 b0 80 80 b0 
	b0 b0 b0 b0 3a 80 80 b0 
	3a b0 80 80 80 b0 80 3a 
	b0 3a b0 3a b0 b0 80 3a 
	3a 3a 3a 3a 3a 3a 80 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 

[Cr]:
	2c 2c 2c 80 80 80 80 80 
	2c 2c 2c 2c 2c 80 80 2c 
	2c 2c 2c 2c 34 80 80 2c 
	34 2c 80 80 80 2c 80 34 
	2c 34 2c 34 2c 2c 80 34 
	34 34 34 34 34 34 80 34 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 

[MCU #2] Downsampling:
[Y]:
	76 76 76 00 00 00 00 00 
	76 76 76 76 76 00 00 76 
	76 76 76 76 7d 00 00 76 
	7d 76 00 00 00 76 00 7d 
	76 7d 76 7d 76 76 00 7d 
	7d 7d 7d 7d 7d 7d 00 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 

[Cb]:
	b0 b0 b0 80 80 80 80 80 
	b0 b0 b0 b0 b0 80 80 b0 
	b0 b0 b0 b0 3a 80 80 b0 
	3a b0 80 80 80 b0 80 3a 
	b0 3a b0 3a b0 b0 80 3a 
	3a 3a 3a 3a 3a 3a 80 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 

[Cr]:
	2c 2c 2c 80 80 80 80 80 
	2c 2c 2c 2c 2c 80 80 2c 
	2c 2c 2c 2c 34 80 80 2c 
	34 2c 80 80 80 2c 80 34 
	2c 34 2c 34 2c 2c 80 34 
	34 34 34 34 34 34 80 34 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 

[MCU #2] DCT:
[Y]:
	feec 0094 002b ffce 004e ff95 003f ffdf 
	ff48 006b 002d ffd0 0016 ffe8 fffa 001f 
	000b 0018 fff2 ffeb ffcd 0041 ffd1 004a 
	ffea 002c ffe6 0007 ffdd fffb 0027 fffb 
	ffb3 fffc 003e 0037 ffb7 0004 0017 ffde 
	ffb8 fff3 004a 0031 ffbf 0010 ffff fff3 
	ffee 0025 ffeb fff1 0004 fff8 000b 000e 
	002d 0013 ffca ffdb 0009 0015 ffeb 0029 

[Cb]:
	ff7a 002d fffd 0006 ffd4 000a 0011 000e 
	0136 003d 0013 ffd6 0004 ffef 0009 ffe8 
	ffc9 0012 0029 ffcf 0036 fff2 ffef fff2 
	ffda fff3 fffe 0034 fffd 000e 0005 0048 
	000e 000b ffcd 0040 ffd3 ffea 0018 0020 
	ffc5 0002 fffc ffe7 ffd3 fff4 ffdc ffc6 
	ffe0 fffe 0036 ffdd fff2 0027 fff3 ffe5 
	002a 0020 0023 000d 0018 0019 004a 001d 

[Cr]:
	fe1a ff97 ffe3 0020 ffd0 0045 ffd4 0014 
	0059 ffb1 ffdf 0024 fff0 0011 0002 ffed 
	fffe ffed 0004 0013 001c ffd5 0020 ffcf 
	0012 ffe3 0011 fff5 0017 0001 ffe5 fffb 
	0031 0001 ffdb ffd3 0035 ffff ffee 0012 
	0036 0007 ffce ffe1 0030 fff6 0004 000e 
	000f ffe6 0007 000d fffe 0000 fff9 fff9 
	ffdd ffef 001f 0017 fff7 ffef 0005 ffe0 

[MCU #2] ZZ:
[Y]:
	feec 0094 ff48 000b 006b 002b ffce 002d 
	0018 ffea ffb3 002c fff2 ffd0 004e ff95 
	0016 ffeb ffe6 fffc ffb8 ffee fff3 003e 
	0007 ffcd ffe8 003f ffdf fffa 0041 ffdd 
	0037 004a 0025 002d 0013 ffeb 0031 ffb7 
	fffb ffd1 001f 004a 0027 0004 ffbf fff1 
	ffca ffdb 0004 0010 0017 fffb ffde ffff 
	fff8 0009 0015 000b fff3 000e ffeb 0029 

[Cb]:
	ff7a 002d 0136 ffc9 003d fffd 0006 0013 
	0012 ffda 000e fff3 0029 ffd6 ffd4 000a 
	0004 ffcf fffe 000b ffc5 ffe0 0002 ffcd 
	0034 0036 ffef 0011 000e 0009 fff2 fffd 
	0040 fffc fffe 002a 0020 0036 ffe7 ffd3 
	000e ffef ffe8 fff2 0005 ffea ffd3 ffdd 
	0023 000d fff2 fff4 0018 0048 0020 ffdc 
	0027 0018 0019 fff3 ffc6 ffe5 004a 001d 

[Cr]:
	fe1a ff97 0059 fffe ffb1 ffe3 0020 ffdf 
	ffed 0012 0031 ffe3 0004 0024 ffd0 0045 
	fff0 0013 0011 0001 0036 000f 0007 ffdb 
	fff5 001c 0011 ffd4 0014 0002 ffd5 0017 
	ffd3 ffce ffe6 ffdd ffef 0007 ffe1 0035 
	0001 0020 ffed ffcf ffe5 ffff 0030 000d 
	001f 0017 fffe fff6 ffee fffb 0012 0004 
	0000 fff7 ffef fff9 000e fff9 0005 ffe0 

[MCU #2] Quantification:
[Y]:
	ffc9 0031 ffc3 0002 000f 0003 fffd 0002 
	0006 fffb ffed 0007 ffff fffe 0004 fffa 
	0005 fffb fffb 0000 fffa ffff 0000 0003 
	0001 fff6 fffd 0007 fffe 0000 0002 ffff 
	000b 000a 0003 0002 0000 0000 0001 fffd 
	0000 fffc 0001 0003 0001 0000 ffff 0000 
	fffd ffff 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0001 

[Cb]:
	ffe6 0009 002c fffd 0002 0000 0000 0000 
	0003 fffa 0001 0000 0001 ffff ffff 0000 
	0000 fffa 0000 0000 ffff ffff 0000 ffff 
	0003 0002 0000 0000 0000 0000 0000 0000 
	0002 0000 0000 0001 0001 0001 0000 ffff 
	0000 0000 0000 0000 0000 0000 ffff ffff 
	0001 0000 0000 0000 0000 0002 0001 ffff 
	0001 0000 0000 0000 ffff 0000 0002 0000 

[Cr]:
	ff9f ffeb 000c 0000 fffe 0000 0001 ffff 
	fffd 0003 0006 ffff 0000 0001 ffff 0002 
	fffe 0002 0001 0000 0001 0000 0000 ffff 
	0000 0001 0000 ffff 0000 0000 ffff 0000 
	ffff ffff 0000 ffff 0000 0000 ffff 0001 
	0000 0001 0000 ffff 0000 0000 0001 0000 
	0001 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 ffff 

[MCU #2] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = -60, magnitude = 6, index = 3
		bitstream => writing 14 over 4 bits
		bitstream => writing 3 over 6 bits

AC:
	value = 49, magnitude = 6, index = 49
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 49 over 6 bits
	value = -61, magnitude = 6, index = 2
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 2 over 6 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 209, huffman path = 2040, nbits = 11
		bitstream => writing 2040 over 11 bits
		bitstream => writing 1 over 1 bits
[acdc] block 0
DC:
	value = -31, magnitude = 5, index = 0
		bitstream => writing 30 over 5 bits
		bitstream => writing 0 over 5 bits

AC:
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 44, magnitude = 6, index = 44
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 44 over 6 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 98, huffman path = 2039, nbits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 97, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -38, magnitude = 6, index = 25
		bitstream => writing 62 over 6 bits
		bitstream => writing 25 over 6 bits

AC:
	value = -21, magnitude = 5, index = 10
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 10 over 5 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 12 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 225, huffman path = 16352, nbits = 14
		bitstream => writing 16352 over 14 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #3] Valeurs RGB initiales:
000000 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb 00a1cb    
00a1cb 00a1cb 00a1cb 12cb00 00a1cb 00a1cb 00a1cb 00a1cb    
12cb00 00a1cb 12cb00 00a1cb 12cb00 00a1cb 00a1cb 00a1cb    
00a1cb 12cb00 12cb00 00a1cb 00a1cb 12cb00 00a1cb 00a1cb    
00a1cb 12cb00 12cb00 00a1cb 00a1cb 12cb00 00a1cb 00a1cb    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00    
12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00 12cb00    

[MCU #3] Conversion RGB -> YCbCr:
[Y]:
	00 76 76 76 76 76 76 76 
	76 76 76 7d 76 76 76 76 
	7d 76 7d 76 7d 76 76 76 
	76 7d 7d 76 76 7d 76 76 
	76 7d 7d 76 76 7d 76 76 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 

[Cb]:
	80 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 3a b0 b0 b0 b0 
	3a b0 3a b0 3a b0 b0 b0 
	b0 3a 3a b0 b0 3a b0 b0 
	b0 3a 3a b0 b0 3a b0 b0 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 

[Cr]:
	80 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 34 2c 2c 2c 2c 
	34 2c 34 2c 34 2c 2c 2c 
	2c 34 34 2c 2c 34 2c 2c 
	2c 34 34 2c 2c 34 2c 2c 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 

[MCU #3] Downsampling:
[Y]:
	00 76 76 76 76 76 76 76 
	76 76 76 7d 76 76 76 76 
	7d 76 7d 76 7d 76 76 76 
	76 7d 7d 76 76 7d 76 76 
	76 7d 7d 76 76 7d 76 76 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 
	7d 7d 7d 7d 7d 7d 7d 7d 

[Cb]:
	80 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 3a b0 b0 b0 b0 
	3a b0 3a b0 3a b0 b0 b0 
	b0 3a 3a b0 b0 3a b0 b0 
	b0 3a 3a b0 b0 3a b0 b0 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 
	3a 3a 3a 3a 3a 3a 3a 3a 

[Cr]:
	80 2c 2c 2c 2c 2c 2c 2c 
	2c 2c 2c 34 2c 2c 2c 2c 
	34 2c 34 2c 34 2c 2c 2c 
	2c 34 34 2c 2c 34 2c 2c 
	2c 34 34 2c 2c 34 2c 2c 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 
	34 34 34 34 34 34 34 34 

[MCU #3] DCT:
[Y]:
	ffbf ffef ffea ffee ffed fff2 fffb fffb 
	ffd7 ffe5 ffe3 ffe7 ffed fff1 fff5 fffa 
	ffee ffe1 ffe7 ffe9 fff3 fff4 fff1 fffa 
	ffee ffe5 ffea ffeb ffed fff2 fff5 fff8 
	ffec ffeb ffed ffee ffea fff1 fff9 fff9 
	fff6 fff0 fff2 fff3 fff3 fff5 fffa ffff 
	fffb fff5 fff7 fff8 fffa fff9 fffc 0003 
	fff9 fffc fffb fffc fffc fffb ffff 0002 

[Cb]:
	ff84 ffb5 0023 0004 0035 0014 ffca 0000 
	014e ffd9 0012 fffd ffda ffe6 fff5 fff4 
	ffe1 002f ffe7 fff7 ff84 ffba 003c 0001 
	0000 001e ffe6 0000 0011 fffc 0014 0032 
	0052 fff5 ffec fffe 0070 0033 ffe1 002a 
	ffdd fff7 ffe1 ffe8 000b 0014 ffed ffd6 
	ffc6 ffef ffe4 ffdd ffcc 0000 ffef ffa1 
	0024 ffe0 fff8 ffeb fff8 000e ffe2 ffbe 

[Cr]:
	fd8c 0013 000a 000b 0006 0006 0009 0002 
	fff7 0016 0011 0010 0010 000c 0008 0004 
	000f 000f 0012 0010 0015 000f 0003 0003 
	000b 000e 0011 000e 000a 0009 0005 ffff 
	0004 000e 000e 000c 0002 0004 0007 ffff 
	000a 000b 000c 000b 0007 0004 0005 0005 
	0009 0008 0009 0008 0008 0004 0004 0008 
	0000 0006 0004 0004 0003 0001 0003 0005 

[MCU #3] ZZ:
[Y]:
	ffbf ffef ffd7 ffee ffe5 ffea ffee ffe3 
	ffe1 ffee ffec ffe5 ffe7 ffe7 ffed fff2 
	ffed ffe9 ffea ffeb fff6 fffb fff0 ffed 
	ffeb fff3 fff1 fffb fffb fff5 fff4 ffed 
	ffee fff2 fff5 fff9 fffc fff7 fff3 ffea 
	fff2 fff1 fffa fffa fff5 fff1 fff3 fff8 
	fffb fffc fffa fff5 fff9 fff8 fff9 fffa 
	fff9 fffc fffb fffc ffff 0003 ffff 0002 

[Cb]:
	ff84 ffb5 014e ffe1 ffd9 0023 0004 0012 
	002f 0000 0052 001e ffe7 fffd 0035 0014 
	ffda fff7 ffe6 fff5 ffdd ffc6 fff7 ffec 
	0000 ff84 ffe6 ffca 0000 fff5 ffba 0011 
	fffe ffe1 ffef 0024 ffe0 ffe4 ffe8 0070 
	fffc 003c fff4 0001 0014 0033 000b ffdd 
	fff8 ffeb ffcc 0014 ffe1 0032 002a ffed 
	0000 fff8 000e ffef ffd6 ffa1 ffe2 ffbe 

[Cr]:
	fd8c 0013 fff7 000f 0016 000a 000b 0011 
	000f 000b 0004 000e 0012 0010 0006 0006 
	0010 0010 0011 000e 000a 0009 000b 000e 
	000e 0015 000c 0009 0002 0008 000f 000a 
	000c 000c 0008 0000 0006 0009 000b 0002 
	0009 0003 0004 0003 0005 0004 0007 0008 
	0004 0004 0008 0004 0007 ffff ffff 0005 
	0004 0003 0001 0004 0005 0008 0003 0005 

[MCU #3] Quantification:
[Y]:
	fff3 fffb fff3 fffd fffd ffff ffff ffff 
	fff9 fffc fffb fffc fffd ffff ffff 0000 
	fffc fffb fffc fffd 0000 0000 0000 ffff 
	fffb fffe fffe 0000 0000 0000 0000 ffff 
	fffd fffe ffff 0000 0000 0000 0000 0000 
	fffe ffff 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ffe8 fff1 002f fffe ffff 0001 0000 0000 
	0009 0000 000a 0001 0000 0000 0001 0000 
	fffb ffff ffff 0000 ffff ffff 0000 0000 
	0000 fffa 0000 ffff 0000 0000 fffe 0000 
	0000 ffff 0000 0001 ffff 0000 0000 0003 
	0000 0002 0000 0000 0000 0001 0000 ffff 
	0000 0000 ffff 0000 ffff 0001 0001 0000 
	0000 0000 0000 0000 ffff fffd ffff fffe 

[Cr]:
	ff83 0003 ffff 0001 0000 0000 0000 0000 
	0003 0001 0000 0000 0000 0000 0000 0000 
	0002 0002 0001 0000 0000 0000 0000 0000 
	0001 0001 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #3] Compression AC/DC puis Ã©criture dans le flux.
[acdc] block 0
DC:
	value = 42, magnitude = 6, index = 42
		bitstream => writing 14 over 4 bits
		bitstream => writing 42 over 6 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 82, huffman path = 2039, nbits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = 2, magnitude = 2, index = 2
		bitstream => writing 2 over 2 bits
		bitstream => writing 2 over 2 bits

AC:
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 0 over 4 bits
	value = 47, magnitude = 6, index = 47
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 47 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 36, huffman path = 4086, nbits = 12
		bitstream => writing 4086 over 12 bits
		bitstream => writing 9 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 501, nbits = 9
		bitstream => writing 501 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 246, nbits = 8
		bitstream => writing 246 over 8 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 51, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 247, nbits = 8
		bitstream => writing 247 over 8 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 57, nbits = 6
		bitstream => writing 57 over 6 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
[acdc] block 0
DC:
	value = -28, magnitude = 5, index = 3
		bitstream => writing 30 over 5 bits
		bitstream => writing 3 over 5 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 98, huffman path = 2039, nbits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 81, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
